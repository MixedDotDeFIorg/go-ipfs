name: Sync github release assets with dist.ipfs.io

on: push

jobs:
  sync-github-and-dist-ipfs-io:
    runs-on: "ubuntu-latest"
    steps:
      - uses: actions/checkout@v2
      - name: Setup go
        uses: actions/setup-go@v2
        with:
          go-version: '1.16'
      - name: Build IPFS binary
        run: |
          cd cmd/ipfs
          go install
      - name: Initialize IPFS and start daemon
        run: |
          ipfs init
          ipfs daemon &
      - uses: actions/setup-node@v2
        with:
          node-version: 14
      - run: npm install execa
      - name: List github releases
        uses: actions/github-script@v4
        # if: ${{ success() }}
        with:
          script: |
            const execa = require('execa')

            // fetch github releases
            resp = await github.repos.listReleases({ owner: context.repo.owner, repo: context.repo.repo });
            const release_assets = [];
            for (const release of resp.data) {
              // fetch asset info from dist.ipfs.io
              const { ls_stdout } = await execa('ipfs', ['ls', '/ipns/dist.ipfs.io/go-ipfs/' + release.tag_name])
              const dist_assets = [];
              for (const line of ls_stdout.split("\n")) {
                file = line.split(" ")[2]
                console.log("dist ", release.tag_name, " -> ", file)
                dist_assets.push(file)
              }
              
              const github_assets = [];
              for (const asset of release.assets) {
                github_assets.push(asset.name);
              }
              release_assets.push({ tag: release.tag_name, github_assets: github_assets, dist_assets: dist_assets })
            }
            console.log(release_assets);
            return release_assets;
